version: 2.1

# Définir les orbs
orbs:
  codecov: codecov/codecov@4.0.1

# Définir un job pour compiler et tester l'application
jobs:
  build-and-test:
    docker:
      - image: cimg/openjdk:17.0  # Utilisation d'une image Docker CircleCI OpenJDK
    steps:
      - checkout  # Récupérer le code
      - run:
          name: Build
          command: mvn -B -DskipTests clean package  # Nettoyer et construire sans exécuter les tests
      - run:
          name: Test
          command: mvn test  # Exécuter les tests
      - run:
          name: Jacoco file generation
          command: mvn jacoco:report
      - codecov/upload: # Utilisation de l'orb Codecov pour télécharger les résultats de couverture
          file: target/site/jacoco/jacoco.xml

      - run:
          name: Run Checkstyle and Generate Report
          command: mvn checkstyle:checkstyle

      - store_artifacts:
          path: target/checkstyle
          destination: checkstyle_reports

  update-readme:
    docker:
      - image: cimg/openjdk:17.0
    steps:
      - checkout  # Récupérer le code
      - run:
          name: Update README with Checkstyle report link
          command: ./update_readme.sh  # Appeler ton script pour mettre à jour le README
          environment:
            CIRCLECI_TOKEN: $CIRCLECI_TOKEN

 # Récupérer le code pour s'assurer que tous les fichiers sont disponibles

# Workflow pour orchestrer les jobs
workflows:
  version: 2
  build-and-upload:
    jobs:
      - build-and-test  # Exécuter d'abord le job de construction et tests
      - update-readme:
            requires:
              - build-and-test




#      - run:
#          name: Deploy Checkstyle Report to GitHub Pages
#          command: |
#            # Configure les informations de l'utilisateur Git
#            git config --global user.email "anisamara777@gmail.com"
#            git config --global user.name "anis-saa77"
#
#            # Change de répertoire pour la branche gh-pages
#            mkdir gh-pages
#            cp target/checkstyle/index.html gh-pages/
#
#            # Change de répertoire pour la branche gh-pages
#            cd gh-pages
#
#            # Initialisation d'un nouveau dépôt Git
#            git init

#            # Ajouter le dépôt distant
#            git remote add origin https://$GH_TOKEN@github.com/anis-saa77/ceri-m1-techniques-de-test.git
#
#            # Ajouter et valider les modifications
#            git add index.html
#            git commit -m "Update Checkstyle Report [skip ci]"
#
#            # Pousser les modifications vers la branche gh-pages
#            git push --force origin master:gh-pages