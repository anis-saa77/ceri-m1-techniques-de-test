version: 2.1

# Définir les orbs
orbs:
  codecov: codecov/codecov@4.0.1

# Définir un job pour compiler et tester l'application
jobs:
  build-and-test:
    docker:
      - image: cimg/openjdk:17.0  # Utilisation d'une image Docker CircleCI OpenJDK
    steps:
      - checkout  # Récupérer le code
      - run:
          name: Build
          command: mvn -B -DskipTests clean package  # Nettoyer et construire sans exécuter les tests
      - run:
          name: Test
          command: mvn test  # Exécuter les tests
      - run:
          name: Jacoco file generation
          command: mvn jacoco:report
      - codecov/upload: # Utilisation de l'orb Codecov pour télécharger les résultats de couverture
          file: target/site/jacoco/jacoco.xml
      - run:
          name: Run Checkstyle and Generate Report
          command: mvn checkstyle:checkstyle
      - run:
          name: Generate Javadoc
          command: mvn javadoc:javadoc
      - run:
          name: Deployments on GitHub Pages
          command: |
            # Créer une branche 'gh-pages' orpheline
            git checkout --orphan gh-pages
            
            # Supprimer tous les fichiers actuels de la branche
            git rm -rf . 
            
            # Copier la documentation générée dans le répertoire approprié
            cp -r target/site/javadoc/* .
            
            # Copier le rapport de checkstyle
            mkdir -p checkstyle
            cp -r target/site/checkstyle/* checkstyle/
            ls target/site/checkstyle
            
            # Configurer les informations utilisateur Git
            git config --global user.name "CircleCI"
            git config --global user.email "circleci@example.com"  # Utilisation d'un e-mail générique
            
            # Ajouter, committer et pousser les changements
            git add .
            git commit -m "Déployer la documentation Javadoc sur GitHub Pages"
            
            # Utilisation du token pour pousser les changements sur GitHub Pages
            git remote set-url origin https://$GH_TOKEN@github.com/anis-saa77/ceri-m1-techniques-de-test.git
            git push --force --set-upstream origin gh-pages

# Workflow pour orchestrer les jobs
workflows:
  version: 2
  build-and-upload:
    jobs:
      - build-and-test
