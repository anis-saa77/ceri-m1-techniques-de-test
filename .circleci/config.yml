version: 2.1

# Définir les orbs
orbs:
  codecov: codecov/codecov@4.0.1

# Définir un job pour compiler et tester l'application
jobs:
  build-and-test:
    docker:
      - image: cimg/openjdk:17.0  # Utilisation d'une image Docker CircleCI OpenJDK
    steps:
      - checkout  # Récupérer le code
      - run:
          name: Build
          command: mvn -B -DskipTests clean package  # Nettoyer et construire sans exécuter les tests
      - run:
          name: Test
          command: mvn test  # Exécuter les tests
      - run:
          name: Jacoco file generation
          command: mvn jacoco:report
      - codecov/upload: # Utilisation de l'orb Codecov pour télécharger les résultats de couverture
          file: target/site/jacoco/jacoco.xml

      - run:
          name: Run Checkstyle and Generate Report
          command: mvn checkstyle:checkstyle

      - store_artifacts:
          path: target/checkstyle
          destination: checkstyle_reports

  update-readme:
    docker:
      - image: cimg/openjdk:17.0
    steps:
      - checkout
      - run:
          name: Check commit message
          command: |
            COMMIT_MESSAGE=$(git log -1 --pretty=%B)
            echo $COMMIT_MESSAGE
            if [[ $COMMIT_MESSAGE = "Mise à jour auto README" ]]; then
              echo "Commit message matches, skipping update-readme job."
              circleci step halt  
            fi

      - run:
          name: Update README with Checkstyle report link
          command: chmod +x ./update_readme.sh

      - run:
          name: Ajouter et committer les changements dans README
          command: |
            git config --global user.email "anisamara777@gmail.com"
            git config --global user.name "anis-saa77"

            # Mettre à jour l'URL du remote 'origin' avec l'authentification via GH_TOKEN
            git remote set-url origin https://$GH_TOKEN@github.com/anis-saa77/ceri-m1-techniques-de-test.git

            # Ajouter et committer les changements
            git add README.md
            git commit -m "Mise à jour auto README"

            # Pousser les modifications avec le token d'authentification
            git push origin master

# Workflow pour orchestrer les jobs
workflows:
  version: 2
  build-and-upload:
    jobs:
      - build-and-test  # Exécuter d'abord le job de construction et tests
      - update-readme:
            requires:
              - build-and-test
            filters:
              branches:
                only: master